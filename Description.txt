<----------------------------------------------Creational------------------------------------------------->

Фабричный метод (Factory Method) - это паттерн, который определяет интерфейс для создания объектов некоторого 
класса, но непосредственное решение о том, объект какого класса создавать происходит в подклассах. То есть 
паттерн предполагает, что базовый класс делегирует создание объектов классам-наследникам.

Паттерн "Абстрактная фабрика" (Abstract Factory) предоставляет интерфейс для создания семейств взаимосвязанных 
объектов с определенными интерфейсами без указания конкретных типов данных объектов.

Одиночка (Singleton, Синглтон) - порождающий паттерн, который гарантирует, что для определенного класса будет 
создан только один объект, а также предоставит к этому объекту точку доступа.

Паттерн Прототип (Prototype) позволяет создавать объекты на основе уже ранее созданных объектов-прототипов. 
То есть по сути данный паттерн предлагает технику клонирования объектов.

Строитель (Builder) - шаблон проектирования, который инкапсулирует создание объекта и позволяет разделить его
на различные этапы.

<----------------------------------------------Structural------------------------------------------------->

Декоратор (Decorator) представляет структурный шаблон проектирования, который позволяет динамически подключать 
к объекту дополнительную функциональность.

Паттерн Адаптер (Adapter) предназначен для преобразования интерфейса одного класса в интерфейс другого. 
Благодаря реализации данного паттерна мы можем использовать вместе классы с несовместимыми интерфейсами.

Фасад (Facade) представляет шаблон проектирования, который позволяет скрыть сложность системы с помощью 
предоставления упрощенного интерфейса для взаимодействия с ней.

Паттерн Заместитель (Proxy) предоставляет объект-заместитель, который управляет доступом к другому объекту. 
То есть создается объект-суррогат, который может выступать в роли другого объекта и замещать его.

Мост (Bridge) - структурный шаблон проектирования, который позволяет отделить абстракцию от реализации таким 
образом, чтобы и абстракцию, и реализацию можно было изменять независимо друг от друга.

Паттерн Приспособленец (Flyweight) - структурный шаблон проектирования, который позволяет использовать 
разделяемые объекты сразу в нескольких контекстах. Данный паттерн используется преимущественно для оптимизации 
работы с памятью.